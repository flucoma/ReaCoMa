name: Create Manual Release

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'The branch to build and release from'
        required: true
        default: 'main'

jobs:
  build-macos:
    name: Build on macOS
    if: github.repository == 'flucoma/ReaCoMa'
    runs-on: macos-latest
    outputs:
      commit_sha: ${{ steps.get_sha.outputs.COMMIT_SHA }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch_name }}
          submodules: 'recursive'
          fetch-depth: 0

      - name: Get Commit SHA
        id: get_sha
        run: echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Install Tools with Mise
        uses: jdx/mise-action@v2
        with:
          install: true
          cache: true

      - name: Build Project
        run: mise run deploy

      - name: Sign and Notarise
        uses: flucoma/actions/distribution@main
        with:
          glob: '-e dylib'
          package: 'ReacomaExtension/build/dist'
          output_type: 'dmg'
          output: 'ReaCoMa-MacOS'
          cert: ${{ secrets.CERT }}
          certpwd: ${{ secrets.CERTPWD }}
          teamid: ${{ secrets.WWDRTEAMID }}
          apppwd: ${{ secrets.APPSTORECONNECTPWD }}
          appusr: ${{ secrets.APPSTORECONNECTUSERNAME }}

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifact
          path: ReacomaExtension/build/dist/ReaCoMa-MacOS.dmg

  build-windows:
    name: Build on Windows
    if: github.repository == 'flucoma/ReaCoMa'
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch_name }} # Use the branch from the input
          submodules: 'recursive'
          fetch-depth: 0
      
      - name: Install Tools with Mise
        uses: jdx/mise-action@v2
        with:
          install: true
          cache: true

      - name: Setup MSVC Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build Project
        run: mise run deploy-windows

      # TODO: Windows signing? :-(

      - name: Package Windows Build
        shell: pwsh
        run: |
          Compress-Archive -Path ReacomaExtension/build/dist/reaper_ReacomaExtension.dll -DestinationPath ReaCoMa-Windows.zip

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifact
          path: ReaCoMa-Windows.zip
          
  release:
    name: Create GitHub Release
    if: github.repository == 'flucoma/ReaCoMa'
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows]
    steps:
      - name: Get short SHA
        id: get_sha
        run: echo "SHORT_SHA=$(echo ${{ needs.build-macos.outputs.commit_sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Package and Upload Release
        uses: softprops/action-gh-release@v1
        with:
          name: "ReaCoMa Build (${{ env.SHORT_SHA }})"
          tag_name: "release-${{ env.SHORT_SHA }}"
          body: "ReaCoMa built from commit: ${{ needs.build-macos.outputs.commit_sha }}" # Body includes the full SHA
          files: |
            artifacts/macos-artifact/ReaCoMa-MacOS.dmg
            artifacts/windows-artifact/ReaCoMa-Windows.zip
          prerelease: true
          draft: false
